{"version":3,"file":"error.js","sourceRoot":"","sources":["../../src/middleware/error.ts"],"names":[],"mappings":";;AAEA,+BAA+B;AAChB,KAAK,oBAAW,GAAY,EAAE,IAAU;IACrD,IAAI,GAAG,CAAC;IACR,IAAI;QACF,MAAM,IAAI,EAAE,CAAC;KACd;IAAC,OAAO,KAAK,EAAE;QACd,GAAG,GAAG,KAAK,CAAC;QACZ,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;YAC/B,GAAG,GAAG,KAAK,EAAE,CAAC;SACf;QAED,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC;QAC/B,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,MAAM,GAAG,GAAG;YACvC,CAAC,CAAC,GAAG,CAAC,OAAO;YACb,CAAC,CAAC,+BAA+B,CAAC;QAEpC,IAAI,GAAG,CAAC,OAAO,KAAK,gCAAgC,EAAE;YACpD,MAAM,GAAG,GAAG,CAAC;YACb,OAAO,GAAG,qBAAqB,CAAC;SACjC;QAED,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QAEpB,wBAAwB;QACxB,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,GAAG,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC;SACnC;aAAM;YACL,GAAG,CAAC,IAAI,GAAG;gBACT,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO;aACjB,CAAC;SACH;QAED,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACjC;AACH,CAAC;AAlCD,4BAkCC","sourcesContent":["import { Context, Next } from 'koa';\n\n/* eslint-disable no-console */\nexport default async function (ctx: Context, next: Next): Promise<void>{\n  let err;\n  try {\n    await next();\n  } catch (error) {\n    err = error;\n    if (typeof error === 'function') {\n      err = error();\n    }\n\n    let status = err.status || 500;\n    let message = err.message && status < 500\n      ? err.message\n      : 'Sorry, an error has occurred.';\n    \n    if (err.message === 'Unable to acquire a connection') {\n      status = 503;\n      message = 'Service unavailable';\n    }\n\n    ctx.status = status;\n\n    // for validation errors\n    if (err.errors) {\n      ctx.body = { errors: err.errors };\n    } else {\n      ctx.body = {\n        status: status,\n        message: message\n      };\n    }\n\n    ctx.app.emit('error', err, ctx);\n  }\n}\n"]}